#!/bin/bash

set -euo pipefail
PROJECT_ROOT="$(realpath $(dirname $0)/..)"

VERSION=$("$PROJECT_ROOT/hack/get-version.sh")

COMPONENTS=mcp-operator
IMAGE_REPO="$($PROJECT_ROOT/hack/get-registry.sh --image)"
GO_MOD_FILE="${PROJECT_ROOT}/go.mod"

# update VERSION file
echo "$VERSION" > "$PROJECT_ROOT/VERSION"

for comp in ${COMPONENTS//,/ }; do
  CHART_FILE="${PROJECT_ROOT}/charts/${comp}/Chart.yaml"
  CHART_VALUES_FILE="${PROJECT_ROOT}/charts/${comp}/values.yaml"

  # update version and image tag in helm charts
  sed -E -i -e "s@version: v?[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+.*@version: $VERSION@1" "${CHART_FILE}"
  sed -E -i -e "s@appVersion: v?[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+.*@appVersion: $VERSION@1" "${CHART_FILE}"
  sed -i -e "s@  tag: .*@  tag: ${VERSION}@" "${CHART_VALUES_FILE}"

  # update image registry in helm chart (usually doesn't change, but is easily forgotten if it does)
  sed -i -e "s@  repository: .*@  repository: ${IMAGE_REPO}/$comp@" "${CHART_VALUES_FILE}"

  # remove backup files (created by sed on MacOS)
  for file in "${CHART_FILE}" "${CHART_VALUES_FILE}"; do
    rm -f "${file}-e"
  done
done

# update go.mod, but only for release versions
if [[ "$VERSION" != *dev* ]]; then
  sed -i -e "s@	github.tools.sap/CoLa/mcp-operator/api .*@	github.tools.sap/CoLa/mcp-operator/api ${VERSION}@" "${GO_MOD_FILE}"
  # remove backup file (created by sed on MacOS)
  rm -f "${GO_MOD_FILE}-e"
fi

echo "Version set to $VERSION"
